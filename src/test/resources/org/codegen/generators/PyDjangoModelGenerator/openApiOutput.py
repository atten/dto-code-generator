# Auto-generated by DTO-Codegen TEST_VERSION, do not edit
# flake8: noqa
from django.contrib.postgres.fields import ArrayField
from django.db import models
from django.utils.translation import gettext_lazy as _


DEFAULT_MAX_LENGTH = 256


class SomeEnum(models.TextChoices):
    ROCK = 'ROCK', _('ROCK')
    SCISSORS = 'SCISSORS', _('SCISSORS')
    PAPER = 'PAPER', _('PAPER')


class AdvancedDto(models.Model):
    json = models.JSONField(null=True, blank=True, verbose_name=_('Example: [{"foo": "bar"}]'))
    some_enum = models.CharField(null=True, blank=True, max_length=8, default="PAPER", choices=SomeEnum.choices, verbose_name=_('Enum field with the same name as of different entity'))
    java_duration = models.CharField(null=True, blank=True, max_length=32)

    class Meta:
        abstract = True


class SomeEnum(models.TextChoices):
    VARIANT_1 = 'variant1', _('variant1')
    VARIANT_2 = 'variant2', _('variant2')
    VARIANT_3 = 'variant3', _('variant3')


class BasicDto(models.Model):
    some_string = models.CharField(null=True, blank=True, max_length=DEFAULT_MAX_LENGTH)
    some_integer = models.IntegerField(verbose_name=_('Field description'))
    some_number = models.FloatField(verbose_name=_('Field description'))
    boolean_with_default = models.BooleanField(default=True)
    timestamp = models.DateTimeField(null=True, blank=True)
    some_enum = models.CharField(null=True, blank=True, max_length=8, choices=SomeEnum.choices)
    nested_object = models.JSONField(null=True, blank=True)
    number_or_list = models.IntegerField(null=True, blank=True)
    list_of_mixed_types = ArrayField(null=True, blank=True, base_field=models.CharField(max_length=DEFAULT_MAX_LENGTH))

    class Meta:
        abstract = True


class ErrorResponse(models.Model):
    message = models.CharField(null=True, blank=True, max_length=DEFAULT_MAX_LENGTH)
    proxied_error = models.JSONField(null=True, blank=True)

    class Meta:
        abstract = True


class Pageable(models.Model):
    page = models.IntegerField(null=True, blank=True)
    size = models.IntegerField(null=True, blank=True)
    sort = ArrayField(null=True, blank=True, base_field=models.CharField(max_length=DEFAULT_MAX_LENGTH))

    class Meta:
        abstract = True


class Credentials(models.Model):
    username = models.CharField(max_length=DEFAULT_MAX_LENGTH)
    password = models.CharField(max_length=DEFAULT_MAX_LENGTH)

    class Meta:
        abstract = True
